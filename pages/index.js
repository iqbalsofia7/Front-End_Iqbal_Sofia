import Head from 'next/head'
import styles from '@/styles/main.module.css'
import Link from 'next/link.js'
import {AiFillHeart} from "react-icons/ai"
import { useSelector, useDispatch } from 'react-redux'
import { incrementer, incrementerFav } from '@/Features/counter/counterSlice.js'
import {FaMobile, FaPaintBrush} from "react-icons/fa"
import {AiFillMessage, AiOutlineSearch, AiOutlineShoppingCart} from "react-icons/ai"
import {BiNetworkChart} from "react-icons/bi"
import {FiChevronRight} from "react-icons/fi"
import {CiFaceSmile} from "react-icons/ci"
import { useState, useEffect } from 'react';
import Carrousel from '../components/carrousel.js'

export default function Home({posts}, props) {
  const dispatch = useDispatch()  
  const [animeList, setAnimeList] = useState([])
  useEffect(() => {
    fetch('https://api.jikan.moe/v4/anime')
      .then(response => response.json())
      .then(data => setAnimeList(data.data));
  }, []);
  const [searchValue, setSearchValue] = useState('');
  const [selectedGenre, setSelectedGenre] = useState('');
  const [selectedYear, setSelectedYear] = useState('');
  const [selectedSeason, setSelectedSeason] = useState('');
  const handleSearchInputChange = (event) => {
    setSearchValue(event.target.value);
  };
  const handleGenreSelect = (event) => {
    setSelectedGenre(event.target.value);
  };
  const handleYearSelect = (event) => {
    setSelectedYear(event.target.value);
  };
    const handleSeasonSelect = (event) => {
    setSelectedSeason(event.target.value);
  };

  const filteredList = animeList.filter((anime) => {
    return (anime.title.toLowerCase().includes(searchValue.toLowerCase()) &&
    (selectedGenre === '' ? true : anime.genres.map(genre => genre.name.toLowerCase()).includes(selectedGenre.toLowerCase())) &&
    (selectedYear === '' ? true : +anime.year == +selectedYear) &&
    (selectedSeason === '' ? true : anime.season == selectedSeason)
    )
    });
  
  const popularityList = [...filteredList].sort((a, b) => b.popularity - a.popularity);
  const rankList = [...filteredList].sort((a, b) => b.rank - a.rank);
  const topList = [...filteredList].sort((a, b) => b.rank - a.rank);
  const favoriteList = [...filteredList].sort((a, b) => b.favorites - a.favorites);
  const scoreList = [...filteredList].sort((a, b) => b.score - a.score);
  popularityList.length = 5
  rankList.length = 5
  favoriteList.length = 5
  scoreList.length = 5
  topList.length = 10
  const handleIncrementer =(itemTitle, img, id)=>{
    const newItem = { title: itemTitle , image: img, mal_id: id };
    dispatch(incrementer(newItem));
  }
  const handleIncrementerFav =(itemTitle, img, id)=>{
    const newItem = { title: itemTitle , image: img, mal_id: id };
    dispatch(incrementerFav(newItem));
  }
  const loggedIn = useSelector((state)=>state.counter.loggedIn)

  return (
    <>
      <Head>
        <title>Home</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className='all'>
        <Carrousel />
        <div className={styles.platform}>

          <div>
            <h2>The next-generation anime platform</h2>
            <p>Track, share, and discover your favorite anime and manga with AniList.</p>
          </div>

<div className={styles.items}>
          <div className={styles.item}>
            <div className={styles.icon}>
            <BiNetworkChart className={styles.icons}/>
            <div className={styles.text} >
              <h4>Discover your obsessions</h4>
              <p>What are your highest rated genres or most
watched voice actors? Follow your watching
habits over time with in-depth statistics.</p>
            </div>
            </div>
          </div>

          <div className={styles.item}>
            <div className={styles.icon}>
            <FaMobile className={styles.icons}/>
            <div className={styles.text}>
              <h4>Bring AniList anywhere</h4>
              <p>Keep track of your progress on-the-go with
one of many AniList apps across iOS,
Android, macOS, and Windows.</p>
            </div>
            </div>
          </div>

          <div className={styles.item}>
            <div className={styles.icon}>
            <AiFillMessage className={styles.icons}/>
            <div className={styles.text}>
              <h4>Join the conversation</h4>
              <p>Share your thoughts with our thriving
community, make friends, socialize, and
receive recommendations.</p>
            </div>
            </div>
          </div>

          <div className={styles.item}>
            <div className={styles.icon}>
            <FaPaintBrush className={styles.icons}/>
            <div className={styles.text}>
              <h4>Tweak it to your liking</h4>
              <p>Customize your scoring system, title format,
color scheme, and much more! Also, we have
a dark mode.</p>
            </div>
            </div>
          </div>
    </div>
          <div className={styles.divButton}>
            <Link href='/signup' >
              <button className={styles.button}>Join Now </button>
            </Link>
          </div>
        </div>

      <div className={styles.genres}>
        <div>
          <p>Search</p>
          <label for="search" className={styles.searchInput}>
            < AiOutlineSearch/> 
            <input type="search" id="site" name="q" value={searchValue} onChange={handleSearchInputChange}  /> 
          </label>
        </div>

        <div>
          <p>Genres</p>
          <select className={styles.genre} value={selectedGenre} onChange={handleGenreSelect}>
            <option value="">Any</option>
            <option value="Action">Action</option>
            <option value="Adventure">Adventure</option>
            <option value="Comedy">Comedy</option>
            <option value="Drama">Drama</option>
            <option value="Ecchi">Ecchi</option>
            <option value="Fantasy">Fantasy</option>
            <option value="Horror">Horror</option>
            <option value="Mahou Shoujo">Mahou Shoujo</option>
            <option value="Mecha">Mecha</option>
            <option value="Music">Music</option>
            <option value="Mystery">Mystery</option>
            <option value="Psychological">Psychological</option>
            <option value="Psychological">Romance</option>
          </select>
        </div>

        <div>
          <p>Year</p>
          <select className={styles.genre} value={selectedYear} onChange={handleYearSelect} >
            <option value="">Any</option>
            <option value="2007">2007</option>
            <option value="2006">2006</option>
            <option value="2005">2005</option>
            <option value="2004">2004</option>
            <option value="2003">2003</option>
            <option value="2002">2002</option>
            <option value="2001">2001</option>
            <option value="2000">2000</option>
            <option value="1999">1999</option>
            <option value="1998">1998</option>
            <option value="1997">1997</option>
            <option value="1996">1996</option>
            <option value="1995">1995</option>
          </select>
        </div>

        
        <div>
          <p>Season</p>
          <select className={styles.genre} value={selectedSeason} onChange={handleSeasonSelect} >
            <option value="">Any</option>
            <option value="winter">Winter</option>
            <option value="spring">Spring</option>
            <option value="summer">Summer</option>
            <option value="fall">Fall</option>
          </select>
        </div>

        <div>
          <p>Format</p>
          <select className={styles.genre}>
            <option value="Any">Any</option>
            <option value="1">Je sais pas</option>
            <option value="2">Je sais toujours pas</option>
            <option value="3">Je sais pas non plus</option>
            <option value="4">On saura jamais</option>
          </select>
        </div>
      </div>

      <h3 className={styles.titleBig}>TRENDING NOW</h3>
      <div className={styles.cards}>
      {rankList.map((anime) => {
        return(
        <div key={anime.mal_id} className={styles.card}>
          <Link href={`/${anime.mal_id}`}>
          <img className={styles.img} src={anime.images.webp.image_url} />
          </Link>
          <p  className={styles.width}>{anime.title}</p>
          { loggedIn == true ? 
          <span className={styles.cart} onClick={() => handleIncrementer(anime.title, anime.images.webp.image_url, anime.mal_id)}><AiOutlineShoppingCart/></span>
          :
          <span className={styles.cartt} onClick={() => handleIncrementerFav(anime.title, anime.images.webp.image_url, anime.mal_id)}><AiFillHeart /></span>
          }

          <div className={styles.none}>
              <h5>{anime.type}  {anime.status} </h5>
              <p>{anime.genres.map((item)=>(<span className={styles.spanBadges}>{item.name}</span>))}</p>
              <p>{anime.source}</p>
              <div className={styles.triangle}></div>
          </div>
        </div>
      )})} 
          
      </div>
      <Link href='/trendingNow' onClick={props.showTrend}>
      <p className={styles.viewAll} onClick={props.showTrend} >View All</p>
      </Link>

      <h3 className={styles.titleBig}>POPULARITY THIS SEASON</h3>
      <div className={styles.cards}>
      {popularityList.map((anima) => {
        return(
        <div key={anima.id} className={styles.card}>
          <Link href={`/${anima.mal_id}`}>
          <img className={styles.img} src={anima.images.jpg.image_url} />
          </Link>
          <p  className={styles.width}>{anima.title}</p>
          { loggedIn == true ? 
          <span className={styles.cart} onClick={() => handleIncrementer(anima.title, anima.images.webp.image_url, anima.mal_id)}><AiOutlineShoppingCart/></span>
          :
          <span className={styles.cartt} onClick={() => handleIncrementerFav(anima.title, anima.images.webp.image_url, anima.mal_id)}><AiFillHeart /></span>

          }
          <div className={styles.none}>
              <h5>{anima.type}  {anima.status} </h5>
              <p>{anima.genres.map((item)=>(<span className={styles.spanBadges}>{item.name}</span>))}</p>
              <p>{anima.source}</p>
              <div className={styles.triangle}></div>
          </div>
        </div>
      )})} 
          
      </div>
      <Link href='/popularityThisSeason'>
      <p className={styles.viewAll} onClick={props.showTrend} >View All</p>
      </Link>

      <h3 className={styles.titleBig}>UPCOMING NEXT SEASON</h3>
      <div className={styles.cards}>
      {scoreList.map((anima) => {
        return(
        <div key={anima.id} className={styles.card}>
           <Link href={`/${anima.mal_id}`}>
          <img className={styles.img} src={anima.images.jpg.image_url} />
          </Link>
          <p  className={styles.width}>{anima.title}</p>
          { loggedIn == true ? 
          <span className={styles.cart} onClick={() => handleIncrementer(anima.title, anima.images.webp.image_url, anima.mal_id)}><AiOutlineShoppingCart/></span>
          :
          <span className={styles.cartt} onClick={() => handleIncrementerFav(anima.title, anima.images.webp.image_url, anima.mal_id)}><AiFillHeart /></span>

          }
          <div className={styles.none}>
              <h5>{anima.type}  {anima.status} </h5>
              <p>{anima.genres.map((item)=>(<span className={styles.spanBadges}>{item.name}</span>))}</p>
              <p>{anima.source}</p>
              <div className={styles.triangle}></div>
          </div>
        </div>
      )})} 
          
      </div>
      <Link href='/upcomingNextSeason'>
      <p className={styles.viewAll} onClick={props.showTrend} >View All</p>
      </Link>

      <h3 className={styles.titleBig}>ALL TIME POPULAR</h3>
      <div className={styles.cards}>
      {favoriteList.map((anima) => {
        return(
        <div key={anima.id} className={styles.card}>
          <Link href={`/${anima.mal_id}`}>
          <img className={styles.img} src={anima.images.jpg.image_url} />
          </Link>
          <p  className={styles.width}>{anima.title}</p>
          { loggedIn == true ? 
          <span className={styles.cart} onClick={() => handleIncrementer(anima.title, anima.images.webp.image_url, anima.mal_id)}><AiOutlineShoppingCart/></span>
          :
          <span className={styles.cartt} onClick={() => handleIncrementerFav(anima.title, anima.images.webp.image_url, anima.mal_id)}><AiFillHeart /></span>

          }
            <div className={styles.none}>
              <h5>{anima.type}  {anima.status} </h5>
              <p>{anima.genres.map((item)=>(<span className={styles.spanBadges}>{item.name}</span>))}</p>
              <p>{anima.source}</p>
              <div className={styles.triangle}></div>
          </div>
        </div>
      )})} 
          
      </div>

      <Link href='/allTimePopular'>
      <p className={styles.viewAll} onClick={props.showTrend} >View All</p>
      </Link>
      <h3 className={styles.titleBig}>TOP 100 ANIME</h3>
      <div className={styles.cardsRank}>
      {topList.map((anime, index) => {
        return(
        <Link href={`/${anime.mal_id}`}>
          <div key={index} className={styles.allTop} >
            <h4 className={styles.number}>#{index+1}</h4>
            <div className={styles.cardRank}>
            <div className={styles.flex}>
              <img className={styles.imgRank} src={anime.images.webp.small_image_url} />
              <div className={styles.bigWidth}>
              <p className={styles.width}>{anime.title}</p>
              <p className={styles.badges}>{anime.genres.map((item)=>(<span>{item.name}</span>))}</p> 
              </div>
            </div>
            <div>
              <CiFaceSmile className={styles.green}/>
              <p className={styles.lightGrey}> {anime.members} users</p>
            </div>  
            <div>
              <p className={styles.greyColor}> {anime.type}</p>
              <p className={styles.lightGrey}> {anime.episodes} episodes</p>
            </div>  
            <div>
                <p className={styles.greyColor}>{anime.season} {anime.year }</p>
                <p className={styles.lightGrey}>{anime.status}</p>
            </div> 
            </div>
          </div>
        </Link>
      )})} 
          
      </div>
      </main>
    </>
  )
}
